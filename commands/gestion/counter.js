import { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } from 'discord.js';

export default {
	data: new SlashCommandBuilder()
		.setName('counter')
		.setDescription('Gestion des compteurs de serveur')
		.addSubcommand(subcommand =>
			subcommand
				.setName('setup')
				.setDescription('Configurer les compteurs de serveur'))
		.addSubcommand(subcommand =>
			subcommand
				.setName('status')
				.setDescription('Voir le statut des compteurs'))
		.setDefaultMemberPermissions(PermissionFlagsBits.ManageGuild),

	async execute(interaction, client) {
		const subcommand = interaction.options.getSubcommand();

		if (subcommand === 'setup') {
			const embed = new EmbedBuilder()
				.setColor('#8B0000')
				.setTitle('ðŸ“Š Configuration des Compteurs')
				.setDescription('**FonctionnalitÃ©s disponibles :**\nâ€¢ Compteur de membres\nâ€¢ Compteur de bots\nâ€¢ Compteur de rÃ´les\nâ€¢ Compteur de canaux\n\n**Note :** Cette fonctionnalitÃ© sera disponible dans une prochaine mise Ã  jour.')
				.addFields(
					{ name: 'ðŸ”§ Statut', value: 'En dÃ©veloppement', inline: true },
					{ name: 'ðŸ“… DisponibilitÃ©', value: 'Prochaine mise Ã  jour', inline: true }
				)
				.setFooter({ text: client.config.name })
				.setTimestamp();

			return interaction.reply({ embeds: [embed] });
		}

		if (subcommand === 'status') {
			const embed = new EmbedBuilder()
				.setColor('#8B0000')
				.setTitle('ðŸ“ˆ Statut des Compteurs')
				.setDescription(`**Statistiques du serveur :**\nâ€¢ Membres : ${interaction.guild.memberCount}\nâ€¢ RÃ´les : ${interaction.guild.roles.cache.size}\nâ€¢ Canaux : ${interaction.guild.channels.cache.size}\nâ€¢ Emojis : ${interaction.guild.emojis.cache.size}`)
				.setFooter({ text: client.config.name })
				.setTimestamp();

			return interaction.reply({ embeds: [embed] });
		}
	}
};
