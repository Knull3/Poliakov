import { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } from 'discord.js';

export default {
	data: new SlashCommandBuilder()
		.setName('leave')
		.setDescription('Configuration des messages de dÃ©part')
		.addSubcommand(subcommand =>
			subcommand
				.setName('setup')
				.setDescription('Configurer le message de dÃ©part'))
		.addSubcommand(subcommand =>
			subcommand
				.setName('test')
				.setDescription('Tester le message de dÃ©part'))
		.setDefaultMemberPermissions(PermissionFlagsBits.ManageGuild),

	async execute(interaction, client) {
		const subcommand = interaction.options.getSubcommand();

		if (subcommand === 'setup') {
			const embed = new EmbedBuilder()
				.setColor('#8B0000')
				.setTitle('ğŸ‘‹ Configuration Message de DÃ©part')
				.setDescription('**FonctionnalitÃ©s disponibles :**\nâ€¢ Message personnalisÃ©\nâ€¢ Embed configurable\nâ€¢ Variables disponibles\n\n**Note :** Cette fonctionnalitÃ© sera disponible dans une prochaine mise Ã  jour.')
				.addFields(
					{ name: 'ğŸ”§ Statut', value: 'En dÃ©veloppement', inline: true },
					{ name: 'ğŸ“… DisponibilitÃ©', value: 'Prochaine mise Ã  jour', inline: true }
				)
				.setFooter({ text: client.config.name })
				.setTimestamp();

			return interaction.reply({ embeds: [embed] });
		}

		if (subcommand === 'test') {
			const embed = new EmbedBuilder()
				.setColor('#8B0000')
				.setTitle('ğŸ‘‹ Test Message de DÃ©part')
				.setDescription(`**Simulation d'un dÃ©part :**\n\nAu revoir ${interaction.user} !\nNous espÃ©rons te revoir bientÃ´t sur ${interaction.guild.name} !`)
				.setFooter({ text: client.config.name })
				.setTimestamp();

			return interaction.reply({ embeds: [embed] });
		}
	}
};
